DROP DATABASE IF EXISTS cardlyDB;

CREATE DATABASE cardlyDB;

USE cardlyDB;

CREATE TABLE IF NOT EXISTS User (
    UserID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    Username VARCHAR(50) NOT NULL UNIQUE,
    Name VARCHAR(100),
    Photo VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS UserCredential (
    UserID INT NOT NULL PRIMARY KEY,
    Email VARCHAR(100) NOT NULL UNIQUE,
    PasswordHash VARCHAR(100) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Folder (
    FolderID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    FolderName VARCHAR(100) NOT NULL,
    CreationDate DATETIME NOT NULL,
    LastViewDate DATETIME NOT NULL,
    isBookmarked BOOLEAN DEFAULT false,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Deck (
    DeckID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    Title VARCHAR(100) NOT NULL,
    `Description` VARCHAR(255),
    CreationDate DATETIME NOT NULL,
    LastViewDate DATETIME NOT NULL,
    isVisible BOOLEAN DEFAULT true,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS folderdeck (
    FolderID INT NOT NULL,
    DeckID INT NOT NULL,
    PRIMARY KEY (FolderID, DeckID),
    FOREIGN KEY (FolderID) REFERENCES Folder(FolderID) ON DELETE CASCADE,
    FOREIGN KEY (DeckID) REFERENCES Deck(DeckID) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS Card (
    CardID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DeckID INT NOT NULL,
    FrontCard VARCHAR(255) NOT NULL,
    BackCard TEXT NOT NULL,
    CreationDate DATETIME NOT NULL,
    isFavorited BOOLEAN DEFAULT false,
    FOREIGN KEY (DeckID) REFERENCES Deck(DeckID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `Session` (
    SessionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    `Date` DATE NOT NULL,
    DeckID INT NOT NULL,
    FOREIGN KEY (UserID) REFERENCES User(UserID) ON DELETE CASCADE,
    FOREIGN KEY (DeckID) REFERENCES Deck(DeckID) 
);

CREATE TABLE IF NOT EXISTS UserResponse (
    ResponseID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    SessionID INT NOT NULL,
    CardID INT NOT NULL,
    UserAnswerText TEXT NOT NULL,
    Score FLOAT DEFAULT 0,
    FOREIGN KEY (SessionID) REFERENCES Session(SessionID) ON DELETE CASCADE,
    FOREIGN KEY (CardID) REFERENCES Card(CardID)
);

